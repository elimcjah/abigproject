/**
 * @class
 * Adds test helpers.  This class should also import all test.helpers.js files
 * within the node_modules package system and import those functions rather
 * than require an import. 
 */
class SpiritTestHelpers {
    constructor() {
        if (SpiritTestHelpers.instance) {
            return SpiritTestHelpers.instance;
        }
        SpiritTestHelpers.instance = this;
        this.chalk = require('chalk');
        this.fs = require('fs');
        this.http = require('http');
        this.https = require('https');
        this.request = require('request');
        this.rimraf = require('rimraf');
        this.routePaths = {};
        this.servers = [];
    }
    createConfigs() {

    }
    createFile() {

    }
    /**
     * Creates the test server.
     * @param  {number} port (Optional) Port to listen on.
     * @return {Promise} A promise that resolves when the server is online.
     */
    createServer(port) {
        if (!port) {
            port = 3000;
        }
        return new Promise((resolve) => {
            this.servers.push(this.http.createServer(this.app.handle
                .bind(this.app)).listen(port, () => {
                    console.log(this.chalk.yellow('Starting test server ' +
                        'on port ' + port));
                    resolve();
                }
            ));
        });
    }

    /**
     * Initializes Express.
     */
    init() {
        this.app = require('express')();
    }


    /**
     * Shuts down the servers.
     * @return {Promise} A promise that resolves when all the servers have
     *     shut down.
     */
    shutdownServers() {
        let closeCount = 0;
        return new Promise((resolve) => {
            for (let server of this.servers) {
                server.close(() => {
                    closeCount++;
                    if (closeCount >= this.servers.length) {
                        resolve();
                    }
                });
            }
        });
    }
}