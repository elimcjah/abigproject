/**
 * @file
 * This file should overwrite the existing package.json to include a target 
 * called, 'run-testserver'.  It also creates a target called 'run-tests' which
 * bootstraps the tests folder and executes those tests within Jasmine.
 */
let fs = require('fs');
let path = require('spiritfiles').getApplicationDirectory();
let json = JSON.parse(fs.readFileSync(path + '/package.json', 
    'UTF8'));
try {
    if (!fs.existsSync(path + '/configs/tests.json')) {
        let config = {
            'ua-uuid': require('uuid/v4')()
        }
        fs.writeFileSync(path + '/configs/tests.json', 
            JSON.stringify(config, null, 2));
    } else {
        let config = JSON.parse(fs.readFileSync(path + 
            '/configs/tests.json'));
        if (!config.hasOwnProperty('ua-uuid')) {
            config['ua-uuid'] = require('uuid/v4')();
        }
        fs.writeFileSync(path + '/configs/tests.json', 
            JSON.stringify(config, null, 2));
    }
} catch(e) {
}
if (!json.hasOwnProperty('scripts')) {
    json['scripts'] = {};
}
try {
json['scripts']['run-testserver'] = 'node node_modules/spirittests/' +
    'test.server.js';
json['scripts']['run-tests'] = 'node node_modules/spirittests/index.js';
fs.writeFileSync(path + '/package.json', 
    JSON.stringify(json, null, 2));
} catch(e) {

}
try {
    if (!fs.existsSync(path + '/.vscode')) {
        fs.mkdirSync(path + '/.vscode');
    }
    let vscodeConfig;
    if (fs.existsSync(path + '/.vscode/launch.json')) {
        vscodeConfig = JSON.parse(fs.readFileSync(path + '/.vscode/launch.json', 
            'UTF8').replace(/\/\/.+$/mg, ''));
    } else {
        vscodeConfig = {};
    }
    if (vscodeConfig.hasOwnProperty('configurations')) {
        if (vscodeConfig['configurations'].findIndex((config) => {
            return config.name == 'Run Tests';
        }) == -1) {
            vscodeConfig['configurations'].push({
                type: 'node',
                request: 'launch',
                name: 'Run Tests',
                program: '${workspaceRoot}/node_modules/spirittests/index.js',
                cwd: '${workspaceRoot}',
                args: [
                ]
            });
            fs.writeFileSync(path + '/.vscode/launch.json', 
                JSON.stringify(vscodeConfig, null, 2));
        }
    } else {
        fs.writeFileSync(path + '/.vscode/launch.json', 
            JSON.stringify({'configurations': [{
                type: 'node',
                request: 'launch',
                name: 'Run Tests',
                program: '${workspaceRoot}/node_modules/spirittests/index.js',
                cwd: '${workspaceRoot}',
                args: [
                ]
            }]}, null, 2));
    }
} catch(e) {
    
}
process.exit();