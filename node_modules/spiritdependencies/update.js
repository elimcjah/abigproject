
// TODO: refactor
let fs = require('fs');
let path = '';
if (fs.existsSync(__dirname + '/../../package.json')) {
    path = __dirname + '/../../';
} else {
    path = __dirname + '/';
}

let cwd = process.cwd();
process.chdir(path);
path = '';
if (fs.existsSync(cwd + '/node_modules/spiritconfigs')) {
    path = cwd + '/node_modules/';
} else {
    path = __dirname + '/../';
}
let chalk = require('chalk');
try {
    console.info(chalk.cyan('Running clean'));
    require('child_process').execSync('node ' + __dirname + '/clean.js');
} catch(e) {}
let dependencies = JSON.parse(fs.readFileSync(__dirname + '/package.json', 
    'UTF8'))
    ['dependencies'];
for (let dependency in dependencies) {
    try {
        if (!fs.existsSync(path + dependency)) {
            console.info(chalk.cyan('Running install for ' + dependency));
            require('child_process').execSync('npm install ' + dependency);
        }
    } catch(e) {}
}
let promises = 0;
let promisesFulfilled = 0;
try {
    for (let pkg of require(path + 'spiritconfigs/index.js')['dependencies']['modules']) {
        if (typeof pkg == 'object') {
            pkg = Object.keys(pkg)[0];
        }
        try {
            promises++;
            (function(pkg) {
                require(__dirname + '/index.js')
                    .isLatestVersion(pkg, true)
                    .then((result) => {
                    if (!result) {
                        console.info(chalk.cyan('Running install for ' + pkg));
                        require('child_process').execSync('npm install ' + pkg);
                    }
                    promisesFulfilled++;
                });
            })(pkg);
        } catch(e) {}
    }
} catch(e) {}
let itv = setInterval(() => {
    if (promises == promisesFulfilled) {
        console.info(chalk.cyan('Running build'));
        require('child_process').execSync('node ' + __dirname + '/build.js', {
            cwd: cwd
        });
        clearInterval(itv);
        process.exit();
    }
}, 5);